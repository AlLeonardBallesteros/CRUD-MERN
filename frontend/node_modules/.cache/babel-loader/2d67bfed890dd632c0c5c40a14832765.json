{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asdas\\\\Downloads\\\\MERN-Auth-Tutorial-lesson-17\\\\crud\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Task from './components/Task'; // Custom ProtectedRoute component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // You should replace this with your actual authentication state\n  // Check if user is logged in\n\n  if (!isLoggedIn) {\n    // If user is not logged in, redirect to login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  } // If user is logged in, render the Task component\n\n\n  return children;\n};\n\n_s(ProtectedRoute, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = ProtectedRoute;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 51\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Route","Routes","Navigate","Login","Signup","Task","ProtectedRoute","children","isLoggedIn","setIsLoggedIn","App"],"sources":["C:/Users/asdas/Downloads/MERN-Auth-Tutorial-lesson-17/crud/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Task from './components/Task';\n\n// Custom ProtectedRoute component\nconst ProtectedRoute = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // You should replace this with your actual authentication state\n\n  // Check if user is logged in\n  if (!isLoggedIn) {\n    // If user is not logged in, redirect to login page\n    return <Navigate to=\"/login\" />;\n  }\n\n  // If user is logged in, render the Task component\n  return children;\n};\n\nfunction App() {\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<ProtectedRoute> <Task /> </ProtectedRoute>} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"signup\" element={<Signup />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;;;AACA,MAAMC,cAAc,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C,CADuC,CACc;EAErD;;EACA,IAAI,CAACS,UAAL,EAAiB;IACf;IACA,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAPsC,CASvC;;;EACA,OAAOD,QAAP;AACD,CAXD;;GAAMD,c;;KAAAA,c;;AAaN,SAASI,GAAT,GAAe;EACb,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,cAAD;UAAA,6BAAiB,QAAC,IAAD;YAAA;YAAA;YAAA;UAAA,QAAjB;QAAA;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;MAVQA,G;AAYT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}