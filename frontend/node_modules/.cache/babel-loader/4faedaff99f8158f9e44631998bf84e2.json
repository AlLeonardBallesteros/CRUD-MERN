{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Protectedroute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const userToken = window.localStorage.getItem('token');\n\n    if (!userToken) {\n      navigate(\"/login\");\n    } else {\n      fetch('/api/validate-token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userToken}`\n        },\n        body: JSON.stringify({\n          token: userToken\n        })\n      }).then(response => {\n        if (response.ok) {\n          // Token is valid\n          setIsLoggedIn(true);\n        } else {\n          // Token is invalid\n          handleInvalidToken();\n        }\n      }).catch(error => {\n        console.error('Error validating token:', error);\n        handleServerError();\n      });\n    }\n  }, [navigate]);\n  return isLoggedIn ? children : null;\n};\n\n_s(Protectedroute, \"ByRb0k4YO4RAgY8aI0kHhVwbeVA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Protectedroute;\nexport default Protectedroute;\n\nvar _c;\n\n$RefreshReg$(_c, \"Protectedroute\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Protectedroute","children","navigate","isLoggedIn","setIsLoggedIn","userToken","window","localStorage","getItem","fetch","method","headers","body","JSON","stringify","token","then","response","ok","handleInvalidToken","catch","error","console","handleServerError"],"sources":["C:/Users/asdas/Downloads/MERN-Auth-Tutorial-lesson-17/crud/frontend/src/components/Protectedroute.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Protectedroute = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const userToken = window.localStorage.getItem('token');\r\n  \r\n    if (!userToken) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetch('/api/validate-token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${userToken}`\r\n        },\r\n        body: JSON.stringify({ token: userToken })\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // Token is valid\r\n          setIsLoggedIn(true);\r\n        } else {\r\n          // Token is invalid\r\n          handleInvalidToken();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error validating token:', error);\r\n        handleServerError();\r\n      });\r\n    }\r\n  }, [navigate]);\r\n\r\n  return isLoggedIn ? children : null;\r\n};\r\n\r\nexport default Protectedroute;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,cAAc,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAlB;;IAEA,IAAI,CAACH,SAAL,EAAgB;MACdH,QAAQ,CAAC,QAAD,CAAR;IACD,CAFD,MAEO;MACLO,KAAK,CAAC,qBAAD,EAAwB;QAC3BC,MAAM,EAAE,MADmB;QAE3BC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAkB,UAASN,SAAU;QAF9B,CAFkB;QAM3BO,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEC,KAAK,EAAEV;QAAT,CAAf;MANqB,CAAxB,CAAL,CAQCW,IARD,CAQMC,QAAQ,IAAI;QAChB,IAAIA,QAAQ,CAACC,EAAb,EAAiB;UACf;UACAd,aAAa,CAAC,IAAD,CAAb;QACD,CAHD,MAGO;UACL;UACAe,kBAAkB;QACnB;MACF,CAhBD,EAiBCC,KAjBD,CAiBOC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;QACAE,iBAAiB;MAClB,CApBD;IAqBD;EACF,CA5BQ,EA4BN,CAACrB,QAAD,CA5BM,CAAT;EA8BA,OAAOC,UAAU,GAAGF,QAAH,GAAc,IAA/B;AACD,CAnCD;;GAAMD,c;UACaD,W;;;KADbC,c;AAqCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}