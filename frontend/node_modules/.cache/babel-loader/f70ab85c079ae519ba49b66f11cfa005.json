{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asdas\\\\Downloads\\\\MERN-Auth-Tutorial-lesson-17\\\\crud\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Task from './components/Task'; // Context to store authentication state (replace with your actual implementation)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext(null);\n\nfunction App() {\n  _s();\n\n  const isLoggedIn = useContext(AuthContext); // Replace with your logic to check login\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"task\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SP9vVukWH9dwWxmzm8PY4iUrKlQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","Route","Routes","Navigate","Home","Login","Signup","Task","AuthContext","createContext","App","isLoggedIn"],"sources":["C:/Users/asdas/Downloads/MERN-Auth-Tutorial-lesson-17/crud/frontend/src/App.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Task from './components/Task';\n\n// Context to store authentication state (replace with your actual implementation)\nconst AuthContext = React.createContext(null);\n\nfunction App() {\n  const isLoggedIn = useContext(AuthContext); // Replace with your logic to check login\n\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"signup\" element={<Signup />} />\n\n        {/* Protected route for Task component */}\n        <Route\n          path=\"task\"\n          element={isLoggedIn ? <Task /> : <Navigate to=\"/\" replace />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAN,CAAoB,IAApB,CAApB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,UAAU,GAAGX,UAAU,CAACQ,WAAD,CAA7B,CADa,CAC+B;;EAE5C,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAHF,eAME,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,OAAO,EAAEG,UAAU,gBAAG,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QAAH,gBAAc,QAAC,QAAD;UAAU,EAAE,EAAC,GAAb;UAAiB,OAAO;QAAxB;UAAA;UAAA;UAAA;QAAA;MAFnC;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}